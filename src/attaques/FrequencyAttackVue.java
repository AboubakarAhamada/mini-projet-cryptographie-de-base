package attaques;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/**
 *
 * @author Minfo
 */
public class FrequencyAttackVue extends javax.swing.JFrame {

    /**
     * Creates new form FrequencyAttackVue
     */
    public FrequencyAttackVue() {

        initComponents();
        this.setTitle("Frequency Attack");
        this.setResizable(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtArea = new javax.swing.JTextArea();
        jbCalcul = new javax.swing.JButton();
        jbParcourir = new javax.swing.JButton();
        quitter = new javax.swing.JButton();
        effacer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtxtArea.setColumns(20);
        jtxtArea.setRows(5);
        jScrollPane1.setViewportView(jtxtArea);

        jbCalcul.setText("Frequences");
        jbCalcul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCalculActionPerformed(evt);
            }
        });

        jbParcourir.setText("Parcourir...");
        jbParcourir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbParcourirActionPerformed(evt);
            }
        });

        quitter.setText("Fermer");
        quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterActionPerformed(evt);
            }
        });

        effacer.setText("Effacer");
        effacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                effacerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbCalcul)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(effacer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quitter))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbParcourir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jbParcourir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbCalcul)
                            .addComponent(effacer))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(quitter)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCalculActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCalculActionPerformed
        // TODO add your handling code here:
        int t[] = {1, 3, 5, 7, 9, 11, 15, 17, 19, 21, 23, 25};
        char[] alpha = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
        int[] occurence = new int[26];
        double[] frequence = new double[26];
        int nb_lettre = 0;
        char index1 = ' ';
        char index2 = ' ';

        String texte = (String) (jtxtArea.getText()).toUpperCase();


        for (int i = 0; i < occurence.length; i++) {
            occurence[i] = 0;
            frequence[i] = 0;
        }

        //Calcul de frequence



        for (int i = 0; i < texte.length(); i++) {

            if (Character.isLetter(texte.charAt(i))) {
                nb_lettre++;
                for (int j = 0; j < 26; j++) {
                    if (texte.charAt(i) == alpha[j]) {

                        occurence[j]++;

                        break;
                    }//end_if

                }//end_for
            }//end_if
        } //end_for

        for (int i = 0; i < alpha.length; i++) {

            frequence[i] = 100.0 * occurence[i] / nb_lettre;
            if (15 < frequence[i] && frequence[i] < 18) {
                index1 = alpha[i];
            }

            if ((8 < frequence[i] && frequence[i] < 9) || (7.5 < frequence[i] && frequence[i] < 8)) {
                index2 = alpha[i];
            }


        }

        //Affichage des occurence de chaque lettre dans le texte:
        jtxtArea.append("\n\n==================STATISTIQUES==================\n\n");
        jtxtArea.append("Il y a " + nb_lettre + " lettres dans ce texte \n\n");
        jtxtArea.append("   Lettre\t  nXfois\t Frequence \n\n");

        for (int i = 0; i < occurence.length; i++) {

            jtxtArea.append("  " + alpha[i] + "\t" + occurence[i] + " "
                    + "\t" + frequence[i] + "%\n");

        }
        
        
        
        if (index1 != ' ' && index2 != ' ') {

            jtxtArea.append("\t La lettre '" + index1 + "' doit etre le E et "
                    + "la lettre '" + index2 + "' doit etre le S");

        } else {
            JOptionPane.showMessageDialog(null, "Le texte saisi est trop court pour"
                    + "etre analyser par le programme.\n"
                    + "Assurez vous que votre texte contient environ 10000 lettres!");
        }
        
        
        //Comment rouver les deux lettres qui ont la frequence la plus elévées.
        int c1 = index1 - 64;
        int c2 = index2 - 64;
        
        
        while (c1 < 0) {
            c1 = c1 + 26;
        }
        
        while (c2 < 0) {
            c2 = c2 + 26;
        }
        
        jtxtArea.append("\t\n " + c1 + " " + c2);

        int tmp=c2-c1;
        while (tmp < 0) {
            tmp= tmp + 26;
        }
        //Resolution des deux equations:
        //k1*c1+k2 mod(26)=5 (1)
        //k1*c2+k2 mod(26)=19 (2)
        //(c2-c1)*k1 mod(26)=14 (2)-(1)

        int inv = 0;
        for (int j = 0; j < 12; j++) {
            if ((tmp * t[j]) % 26 == 1) {
                inv = t[j];
                break;
            }
        }
        System.out.println(inv);
        int k1 = 14 * inv % 26;
        int k2 = 5 - k1 * c1 % 26;

        while (k2 < 0) {
            k2 = k2 + 26;
        }
       
        jtxtArea.append("\t\n La clé semble etre (" + k1 + " " + k2 + ")");


    }//GEN-LAST:event_jbCalculActionPerformed

    private void jbParcourirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbParcourirActionPerformed
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();

        int returnVal = fc.showOpenDialog(jbParcourir);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String path = file.getAbsolutePath();

            BufferedReader ibr = null;
            try {
                ibr = new BufferedReader(new FileReader(path));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(FrequencyAttackVue.class.getName()).log(Level.SEVERE, null, ex);
            }

            String ligne;

            try {
                while ((ligne = ibr.readLine()) != null) {
                    //System.out.println(ligne);
                    jtxtArea.append(ligne + "\n");
                }

            } catch (IOException ex) {
                Logger.getLogger(FrequencyAttackVue.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jtxtArea.append("Votre fichier est vide veillez seletionner un autre !");
        }

    }//GEN-LAST:event_jbParcourirActionPerformed

    private void effacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_effacerActionPerformed
        // TODO add your handling code here:
        jtxtArea.setText("");
    }//GEN-LAST:event_effacerActionPerformed

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_quitterActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton effacer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCalcul;
    private javax.swing.JButton jbParcourir;
    private javax.swing.JTextArea jtxtArea;
    private javax.swing.JButton quitter;
    // End of variables declaration//GEN-END:variables
}
